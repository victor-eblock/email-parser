buildscript {
    ext.kotlin_version = '1.0.3'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url 'https://dl.bintray.com/kotlin/kotlin-eap'
        }

    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.9"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'org.jetbrains.dokka'

mainClassName = 'examples.QuoteParserExampleKt'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'jakarta.mail:jakarta.mail-api:2.1.0'
    compile group: 'com.intellij', name: 'annotations', version: '12.0'

    testCompile 'junit:junit:4.12'
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile 'org.jetbrains.spek:spek-api:1.1.5'
    testRuntime 'org.jetbrains.spek:spek-junit-platform-engine:1.1.5'
}

repositories {
    mavenCentral()
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

task wrapper(type: Wrapper) {
    gradleVersion = "2.11"
}

run {
    standardInput = System.in

    if (project.hasProperty('emlFile')) {
        args emlFile.split('\n')
    }
}

task runProcessing(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'examples.QuoteParserExampleKt'

    if (project.hasProperty('emlFile')) {
        args emlFile.split('\n')
    }
}

dokka {
    outputDirectory = "$buildDir/dokka"
    includes = ['module.md']
    sourceDirs = files('src/main/kotlin/quoteParser')
    linkMapping {
        dir = "src/main/kotlin"
        url = "https://github.com/JetBrains/email-parser/tree/master/src/main/kotlin"
        suffix = "#L"
    }
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
    includes = ['module.md']
    sourceDirs = files('src/main/kotlin/quoteParser')
}
